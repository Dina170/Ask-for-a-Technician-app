<div class="rounded-tl-3xl shadow-md border p-5 h-[100%] bg-white">
    <div class="mb-6 px-6">
        <h1 class="text-xl font-bold my-1 text-right">
            <%= blog ? "تعديل مدونة" : "إضافة مدونة" %>
        </h1>
        <p class="text-gray-600 text-right">
            <a href="/dashboard/blogs" class="hover:text-Sky-950 hover:font-medium">المدونة</a> &gt;
            <%= blog ? "تعديل مدونة" : "إضافة مدونة" %>
        </p>
    </div>

    <form id="blogForm" action="<%= blog ? '/dashboard/blogs/' + blog._id + '?_method=PUT' : '/dashboard/blogs' %>"
        method="POST">

        <div class="bg-white rounded-lg px-6 py-2 space-y-6">


            <!-- Blog Category -->
            <div>
                <label class="block text-right mb-2 required font-medium">المدونة</label>
                <input type="text" name="blog" id="blogCategory"
                    class="w-full p-2 border rounded-md text-right focus:outline-blue-950 focus:outline-1"
                    placeholder="ادخل المدونة" value="<%= blog?.blog || '' %>">
                <p id="blogCategoryError" class="text-red-500 text-sm mt-1 hidden"></p>
                <% if (typeof error !=='undefined' ) { %>
                    <div class="text-red-500 text-sm mt-1 text-right font-medium" role="alert">
                        <strong class="font-bold">خطأ:</strong>
                        <span class="block sm:inline">
                            <%= error %>
                        </span>
                    </div>
                    <% } %>
            </div>

            <!-- Blog Title -->
            <div>
                <label class="block text-right mb-2 required font-medium">عنوان المدونة</label>
                <input type="text" name="title" id="blogTitle"
                    class="w-full p-2 border rounded-md text-right focus:outline-blue-950 focus:outline-1"
                    placeholder="ادخل عنوان المدونة" value="<%= blog?.title || '' %>">
                <p id="blogTitleError" class="text-red-500 text-sm mt-1 hidden"></p>
            </div>

            <!-- Description (Quill) -->
            <div>
                <label class="block text-right mb-2 required font-medium">الوصف</label>
                <div id="descriptionEditor" dir="rtl" class="quill-container border rounded-md"><%- blog?.description
                        || '' %></div>
                <input type="hidden" name="description" id="descriptionInput" />
                <p id="descriptionError" class="text-red-500 text-sm mt-1 hidden"></p>
            </div>
            <!-- Buttons -->
            <div class="flex justify-between mt-10">
                <button type="submit"
                    class="bg-gray-400 hover:bg-gray-600 text-white font-bold py-3 px-4 rounded-md w-[45%] text-center flex items-center justify-center">
                    <i class="fa-regular fa-square-check me-2"></i>
                    <%= blog ? "تحديث" : "حفظ" %>
                </button>
                <a href="/dashboard/blogs"
                    class="bg-white border border-gray-700 hover:bg-gray-700 hover:text-white text-gray-800 font-bold py-3 px-4 rounded-md flex items-center justify-center w-[45%]">
                    رجوع <i class="fa-solid fa-arrow-left ms-2"></i>
                </a>
            </div>
        </div>
    </form>
</div>

<!-- Quill CSS & JS -->
<link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet" />
<script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // إعداد Quill
        const toolbarOptions = [
            [{ 'header': [1, 2, 3, 4, false] }],
            ['bold', 'italic', 'underline'],
            [{ 'color': [] }, { 'background': [] }],
            [{ align: [] }],
            [{ list: 'ordered' }, { list: 'bullet' }],
            [{ 'direction': 'rtl' }],
            ['clean']
        ];

        const editor = new Quill('#descriptionEditor', {
            theme: 'snow',
            modules: { toolbar: toolbarOptions }
        });

        // تحميل البيانات القديمة لو تعديل
        const oldDescription = `<%- blog?.description || '' %>`;
        if (oldDescription) {
            editor.root.innerHTML = oldDescription;
            document.getElementById("descriptionInput").value = editor.root.innerHTML;
        }

        // دوال إظهار/إخفاء الأخطاء
        const showError = (id, msg) => {
            const el = document.getElementById(id);
            if (el) {
                el.textContent = msg;
                el.classList.remove('hidden');
            }
        };
        const hideError = (id) => {
            const el = document.getElementById(id);
            if (el) {
                el.textContent = '';
                el.classList.add('hidden');
            }
        };

        // التحقق عند الإرسال
        document.getElementById("blogForm").addEventListener("submit", (e) => {
            let isValid = true;

            // reset errors
            ['blogCategoryError', 'blogTitleError', 'descriptionError'].forEach(hideError);

            const blogCategory = document.getElementById("blogCategory").value.trim();
            const blogTitle = document.getElementById("blogTitle").value.trim();
            const descriptionText = editor.getText().trim();

            // تحقق من المدونة
            if (!blogCategory) {
                showError("blogCategoryError", "اسم المدونة مطلوب.");
                isValid = false;
            }

            // تحقق من العنوان
            if (!blogTitle) {
                showError("blogTitleError", "عنوان المدونة مطلوب.");
                isValid = false;
            } else if (blogTitle.length < 3) {
                showError("blogTitleError", "عنوان المدونة يجب أن يكون على الأقل 3 أحرف.");
                isValid = false;
            }

            // تحقق من الوصف
            if (!descriptionText) {
                showError("descriptionError", "الوصف مطلوب.");
                isValid = false;
            } else if (descriptionText.length < 3) {
                showError("descriptionError", "الوصف يجب أن يكون على الأقل 3 أحرف.");
                isValid = false;
            }

            // لو صحيح نحط المحتوى في hidden input
            if (isValid) {
                document.getElementById("descriptionInput").value = editor.root.innerHTML;
            } else {
                e.preventDefault();
                const firstError = document.querySelector('.text-red-500:not(.hidden)');
                firstError?.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
        });
    });
</script>

<style>
    .quill-container {
        height: 150px;
    }

    .ql-editor {
        direction: rtl !important;
        text-align: right !important;
    }
    
    .ql-editor ul,
    .ql-editor ol {
        list-style: none !important;
        margin: 0;
        padding: 0;
    }

    /* Quill align fix */
    .ql-editor.ql-align-right {
        text-align: right !important;
    }

    .ql-editor.ql-align-left {
        text-align: left !important;
    }

    .ql-editor.ql-align-center {
        text-align: center !important;
    }

    .ql-editor.ql-align-justify {
        text-align: justify !important;
    }

    /* ===== Unordered list (•) ===== */
    .ql-editor ul li {
        position: relative;
        margin-bottom: 0.3rem;
        padding-inline-start: 1.2rem;
    }

    .ql-editor ul li::before {
        content: "•";
        position: absolute;
        top: 0;
        font-size: 1rem;
        color: #000;
        line-height: 1;
    }

    .ql-editor ul li::before {
        right: 0;
    }

    .ql-editor ul li::before {
        left: 0;
    }

    /* ===== Ordered list  ===== */
    .ql-editor ol li {
        position: relative;
        margin-bottom: 0.3rem;
        counter-increment: quill-counter;
        padding-inline-start: 2rem;
    }

    .ql-editor ol {
        counter-reset: quill-counter;
    }


    .ql-editor ol li::before {
        content: counter(quill-counter) ".";
        position: absolute;
        top: 0;
        font-size: 1rem;
        color: #000;
        line-height: 1;
    }

    .ql-editor ol li::before {
        right: 0;
    }

    .ql-snow .ql-picker.ql-header .ql-picker-label::before {
        content: attr(data-label);
        margin-right: 1px;
    }

    .ql-snow .ql-picker.ql-header .ql-picker-label::after {
        content: '▾';
        font-size: 15px;
        margin-left: 4px;
        vertical-align: middle;
    }

    .ql-snow .ql-picker.ql-header .ql-picker-label svg {
        display: none;
    }

    .ql-snow .ql-picker.ql-header .ql-picker-label:not([data-value]):before {
        content: "Normal" !important;
    }

    .required::after {
        color: red;
    }
</style>